// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package helloworld;

// The greeting service definition.
service Greeter {
  rpc VoidMetodoSemParametros (Void) returns (Void) {}
  
  rpc EnviaIntRecebeInt (HelloRequest) returns (HelloReply) {}

  rpc EnviaLongRecebeLong (Long) returns (Long) {}

  rpc EnviaLong8RecebeLong (Long8) returns (Long) {}

  rpc EnviaStringPotencia10RecebeString (String) returns (String) {}

  rpc EnviaArrayGiganteRecebeString (TipoComplexo) returns (String) {}

  rpc EnviaArrayGiganteRecebeArrayGigante (TipoComplexo) returns (TipoComplexo) {}

}

// The request message containing the user's name.
message HelloRequest {
  int32 name = 1;
}

// The response message containing the greetings
message HelloReply {
  int32 message = 1;
}

message Void{
}

message Long{
  int64 message = 1;
}

message Long8{
  int64 message1 = 1;
  int64 message2 = 2;
  int64 message3 = 3;
  int64 message4 = 4;
  int64 message5 = 5;
  int64 message6 = 6;
  int64 message7 = 7;
  int64 message8 = 8;
}

message String{
  string message = 1;
}

message TipoComplexo{
  repeated int32 message = 1;
}

